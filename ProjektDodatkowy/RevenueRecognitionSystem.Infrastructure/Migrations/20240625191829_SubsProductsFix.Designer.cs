// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueRecognitionSystem.Infrastructure;

#nullable disable

namespace RevenueRecognitionSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ReveuneDbContext))]
    [Migration("20240625191829_SubsProductsFix")]
    partial class SubsProductsFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.Client.BaseClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasDiscriminator<string>("CustomerType").HasValue("BaseClient");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountToPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSoftware")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("YearsOfSupport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSoftware");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Offer")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SoftwareSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SoftwareSystems");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SubPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDateTimePeriod")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdSubscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PayDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDateTimePeriod")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSubscription");

                    b.ToTable("SubPayments");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSoftware")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RenewalPeriod")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("IdSoftware");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Update", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSoftware")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSoftware");

                    b.ToTable("Updates");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.User.AppUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.Client.CompanyClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Domain.Models.Client.BaseClient");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KRS")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CompanyClient");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.Client.IndividualClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Domain.Models.Client.BaseClient");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PESEL")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("IndividualClient");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Contract", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.Client.BaseClient", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SoftwareSystem", "SoftwareSystem")
                        .WithMany("Contracts")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SubPayment", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Subscription", "Subscription")
                        .WithMany("SubPayments")
                        .HasForeignKey("IdSubscription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Subscription", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.Client.BaseClient", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SoftwareSystem", "SoftwareSystem")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Update", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SoftwareSystem", "SoftwareSystem")
                        .WithMany("SoftwareUpdates")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.Client.BaseClient", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.SoftwareSystem", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("SoftwareUpdates");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.SoftwareLicense.Subscription", b =>
                {
                    b.Navigation("SubPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
